{
	"info": {
		"_postman_id": "ca9b3dd7-e2d2-4aa3-9939-7aa4c9764e32",
		"name": "Header Validation Requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tpp uri compilance warning",
			"item": [
				{
					"name": "1. Set redirect SCA approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c82ed4b-2080-4961-8122-de2b4776dafd",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"REDIRECT\",\n  \"EMBEDDED\",\n  \"DECOUPLED\"\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/sca-approaches",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"sca-approaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Set tppUriComplianceResponse to WARNING mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1aebecf4-063f-4594-a1bb-919b89a3e052",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ais\": {\n        \"consentTypes\": {\n            \"bankOfferedConsentSupported\": false,\n            \"globalConsentSupported\": false,\n            \"availableAccountsConsentSupported\": true,\n            \"accountAccessFrequencyPerDay\": 4,\n            \"notConfirmedConsentExpirationTimeMs\": 86400000,\n            \"maxConsentValidityDays\": 0\n        },\n        \"redirectLinkToOnlineBanking\": {\n            \"aisRedirectUrlToAspsp\": \"http://localhost:4200/ais/{redirect-id}/{encrypted-consent-id}\"\n        },\n        \"transactionParameters\": {\n            \"availableBookingStatuses\": [\n                \"BOOKED\",\n                \"PENDING\"\n            ],\n            \"transactionsWithoutBalancesSupported\": false,\n            \"supportedTransactionApplicationTypes\": [\n                \"application/json\"\n            ]\n        },\n        \"deltaReportSettings\": {\n            \"entryReferenceFromSupported\": false,\n            \"deltaListSupported\": false\n        },\n        \"scaRequirementsForOneTimeConsents\": {\n            \"scaByOneTimeAvailableAccountsConsentRequired\": true,\n            \"scaByOneTimeGlobalConsentRequired\": true\n        }\n    },\n    \"pis\": {\n        \"supportedPaymentTypeAndProductMatrix\": {\n            \"payments\": [\n                \"sepa-credit-transfers\",\n                \"instant-sepa-credit-transfers\"\n            ]\n        },\n        \"maxTransactionValidityDays\": 0,\n        \"notConfirmedPaymentExpirationTimeMs\": 86400000,\n        \"paymentCancellationAuthorisationMandated\": false,\n        \"redirectLinkToOnlineBanking\": {\n            \"pisRedirectUrlToAspsp\": \"http://localhost:4200/pis/{redirect-id}/{encrypted-payment-id}\",\n            \"pisPaymentCancellationRedirectUrlToAspsp\": \"http://localhost:4200/pis/cancellation/{redirect-id}/{encrypted-payment-id}\",\n            \"paymentCancellationRedirectUrlExpirationTimeMs\": 600000\n        },\n        \"countryValidationSupported\": \"DE\",\n        \"supportedTransactionStatusFormats\": [\n            \"application/json\"\n        ]\n    },\n    \"piis\": {\n        \"piisConsentSupported\": \"NOT_SUPPORTED\"\n    },\n    \"common\": {\n        \"scaRedirectFlow\": \"OAUTH\",\n        \"oauthConfigurationUrl\": \"http://localhost:4200/idp/\",\n        \"startAuthorisationMode\": \"auto\",\n        \"tppSignatureRequired\": false,\n        \"psuInInitialRequestMandated\": false,\n        \"redirectUrlExpirationTimeMs\": 600000,\n        \"authorisationExpirationTimeMs\": 86400000,\n        \"forceXs2aBaseLinksUrl\": false,\n        \"xs2aBaseLinksUrl\": \"http://myhost.com/\",\n        \"supportedAccountReferenceFields\": [\n            \"IBAN\"\n        ],\n        \"multicurrencyAccountLevelSupported\": \"SUBACCOUNT\",\n        \"aisPisSessionsSupported\": false,\n        \"signingBasketSupported\": false,\n        \"aspspNotificationsSupported\": [\n        \t\"NONE\"\t\n        ],\n          \t\"authorisationConfirmationRequestMandated\": false,\n    \t\"authorisationConfirmationCheckByXs2a\": false, \n  \"checkUriComplianceToDomainSupported\": true,\n  \"tppUriComplianceResponse\": \"WARNING\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/aspsp-settings",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"aspsp-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Payment initiation request invalid uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10e8bbdd-5b12-4f91-a398-9172e2cbfcc7",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING exist\", () => {",
									"    pm.expect(jsonData).to.have.property('tppMessages');",
									"    const tppMessage = jsonData.tppMessages[0];",
									"    pm.expect(tppMessage.code).to.eql('WARNING');",
									"    pm.expect(tppMessage.text).to.eql('TPP URIs are not compliant with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8315c186-f9e3-451e-a7b1-ea792f887cef",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_single}}",
								"type": "text"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}",
								"type": "text"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"value": "true",
								"type": "text"
							},
							{
								"key": "TPP-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "{{certificate-with-link}}",
								"type": "text"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Payment initiation request uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53389d24-3c14-47c3-9b7f-52dd85c93728",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d111b2fa-2f4c-4eff-9505-935ab108fe63",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_single}}"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "TPP-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "tpp-qwac-certificate",
								"type": "text",
								"value": "{{certificate-with-link}}"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.finapi.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tpp uri compilance reject",
			"item": [
				{
					"name": "1. Set redirect SCA approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67c72fd4-24fa-4b60-bf1f-30928b53a206",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"REDIRECT\",\n  \"EMBEDDED\",\n  \"DECOUPLED\"\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/sca-approaches",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"sca-approaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Set tppUriComplianceResponse to REJECT mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89eb4833-a3b2-4bd1-8c63-f377c0eb03ee",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ais\": {\n        \"consentTypes\": {\n            \"bankOfferedConsentSupported\": false,\n            \"globalConsentSupported\": false,\n            \"availableAccountsConsentSupported\": true,\n            \"accountAccessFrequencyPerDay\": 4,\n            \"notConfirmedConsentExpirationTimeMs\": 86400000,\n            \"maxConsentValidityDays\": 0\n        },\n        \"redirectLinkToOnlineBanking\": {\n            \"aisRedirectUrlToAspsp\": \"http://localhost:4200/ais/{redirect-id}/{encrypted-consent-id}\"\n        },\n        \"transactionParameters\": {\n            \"availableBookingStatuses\": [\n                \"BOOKED\",\n                \"PENDING\"\n            ],\n            \"transactionsWithoutBalancesSupported\": false,\n            \"supportedTransactionApplicationTypes\": [\n                \"application/json\"\n            ]\n        },\n        \"deltaReportSettings\": {\n            \"entryReferenceFromSupported\": false,\n            \"deltaListSupported\": false\n        },\n        \"scaRequirementsForOneTimeConsents\": {\n            \"scaByOneTimeAvailableAccountsConsentRequired\": true,\n            \"scaByOneTimeGlobalConsentRequired\": true\n        }\n    },\n    \"pis\": {\n        \"supportedPaymentTypeAndProductMatrix\": {\n            \"payments\": [\n                \"sepa-credit-transfers\",\n                \"instant-sepa-credit-transfers\"\n            ]\n        },\n        \"maxTransactionValidityDays\": 0,\n        \"notConfirmedPaymentExpirationTimeMs\": 86400000,\n        \"paymentCancellationAuthorisationMandated\": false,\n        \"redirectLinkToOnlineBanking\": {\n            \"pisRedirectUrlToAspsp\": \"http://localhost:4200/pis/{redirect-id}/{encrypted-payment-id}\",\n            \"pisPaymentCancellationRedirectUrlToAspsp\": \"http://localhost:4200/pis/cancellation/{redirect-id}/{encrypted-payment-id}\",\n            \"paymentCancellationRedirectUrlExpirationTimeMs\": 600000\n        },\n        \"countryValidationSupported\": \"DE\",\n        \"supportedTransactionStatusFormats\": [\n            \"application/json\"\n        ]\n    },\n    \"piis\": {\n        \"piisConsentSupported\": \"NOT_SUPPORTED\"\n    },\n    \"common\": {\n        \"scaRedirectFlow\": \"OAUTH\",\n        \"oauthConfigurationUrl\": \"http://localhost:4200/idp/\",\n        \"startAuthorisationMode\": \"auto\",\n        \"tppSignatureRequired\": false,\n        \"psuInInitialRequestMandated\": false,\n        \"redirectUrlExpirationTimeMs\": 600000,\n        \"authorisationExpirationTimeMs\": 86400000,\n        \"forceXs2aBaseLinksUrl\": false,\n        \"xs2aBaseLinksUrl\": \"http://myhost.com/\",\n        \"supportedAccountReferenceFields\": [\n            \"IBAN\"\n        ],\n        \"multicurrencyAccountLevelSupported\": \"SUBACCOUNT\",\n        \"aisPisSessionsSupported\": false,\n        \"signingBasketSupported\": false,\n        \"aspspNotificationsSupported\": [\n        \t\"NONE\"\t\n        ],\n          \t\"authorisationConfirmationRequestMandated\": false,\n    \t\"authorisationConfirmationCheckByXs2a\": false, \n  \"checkUriComplianceToDomainSupported\": true,\n   \"tppUriComplianceResponse\": \"REJECT\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/aspsp-settings",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"aspsp-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Payment initiation request invalid uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3648d08d-9985-4ebf-8bd2-aaefc7ae8b13",
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Error code is FORMAT_ERROR\", () => {",
									"    const jsonData = pm.response.json();",
									"    const error = jsonData.tppMessages[0];",
									"    pm.expect(error.code).to.eql('FORMAT_ERROR');",
									"    pm.expect(error.text).to.eql('URIs don\\'t comply with domain from certificate');",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e879e59f-a200-4ff3-92fc-210a69f3e71c",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_single}}",
								"type": "text"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}",
								"type": "text"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"value": "true",
								"type": "text"
							},
							{
								"key": "TPP-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "{{certificate-with-link}}",
								"type": "text"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Payment initiation request uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a41cb5d-902f-4b18-bf13-be2eb70b065d",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b79881cc-67bf-4d5b-a35c-47040f07ee54",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_single}}"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "TPP-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "tpp-qwac-certificate",
								"type": "text",
								"value": "{{certificate-with-link}}"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.finapi.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tpp uri compilance reject when checkUriComplianceToDomainSupported off",
			"item": [
				{
					"name": "1. Set redirect SCA approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671441db-1c8d-4a10-a4e1-faa5436ac56c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"REDIRECT\",\n  \"EMBEDDED\",\n  \"DECOUPLED\"\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/sca-approaches",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"sca-approaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Set tppUriComplianceResponse to REJECT and checkUriComplianceToDomainSupported false",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb7268c6-b3be-42b0-b5b7-8f5d61cfeb09",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ais\": {\n        \"consentTypes\": {\n            \"bankOfferedConsentSupported\": false,\n            \"globalConsentSupported\": false,\n            \"availableAccountsConsentSupported\": true,\n            \"accountAccessFrequencyPerDay\": 4,\n            \"notConfirmedConsentExpirationTimeMs\": 86400000,\n            \"maxConsentValidityDays\": 0\n        },\n        \"redirectLinkToOnlineBanking\": {\n            \"aisRedirectUrlToAspsp\": \"http://localhost:4200/ais/{redirect-id}/{encrypted-consent-id}\"\n        },\n        \"transactionParameters\": {\n            \"availableBookingStatuses\": [\n                \"BOOKED\",\n                \"PENDING\"\n            ],\n            \"transactionsWithoutBalancesSupported\": false,\n            \"supportedTransactionApplicationTypes\": [\n                \"application/json\"\n            ]\n        },\n        \"deltaReportSettings\": {\n            \"entryReferenceFromSupported\": false,\n            \"deltaListSupported\": false\n        },\n        \"scaRequirementsForOneTimeConsents\": {\n            \"scaByOneTimeAvailableAccountsConsentRequired\": true,\n            \"scaByOneTimeGlobalConsentRequired\": true\n        }\n    },\n    \"pis\": {\n        \"supportedPaymentTypeAndProductMatrix\": {\n            \"payments\": [\n                \"sepa-credit-transfers\",\n                \"instant-sepa-credit-transfers\"\n            ]\n        },\n        \"maxTransactionValidityDays\": 0,\n        \"notConfirmedPaymentExpirationTimeMs\": 86400000,\n        \"paymentCancellationAuthorisationMandated\": false,\n        \"redirectLinkToOnlineBanking\": {\n            \"pisRedirectUrlToAspsp\": \"http://localhost:4200/pis/{redirect-id}/{encrypted-payment-id}\",\n            \"pisPaymentCancellationRedirectUrlToAspsp\": \"http://localhost:4200/pis/cancellation/{redirect-id}/{encrypted-payment-id}\",\n            \"paymentCancellationRedirectUrlExpirationTimeMs\": 600000\n        },\n        \"countryValidationSupported\": \"DE\",\n        \"supportedTransactionStatusFormats\": [\n            \"application/json\"\n        ]\n    },\n    \"piis\": {\n        \"piisConsentSupported\": \"NOT_SUPPORTED\"\n    },\n    \"common\": {\n        \"scaRedirectFlow\": \"OAUTH\",\n        \"oauthConfigurationUrl\": \"http://localhost:4200/idp/\",\n        \"startAuthorisationMode\": \"auto\",\n        \"tppSignatureRequired\": false,\n        \"psuInInitialRequestMandated\": false,\n        \"redirectUrlExpirationTimeMs\": 600000,\n        \"authorisationExpirationTimeMs\": 86400000,\n        \"forceXs2aBaseLinksUrl\": false,\n        \"xs2aBaseLinksUrl\": \"http://myhost.com/\",\n        \"supportedAccountReferenceFields\": [\n            \"IBAN\"\n        ],\n        \"multicurrencyAccountLevelSupported\": \"SUBACCOUNT\",\n        \"aisPisSessionsSupported\": false,\n        \"signingBasketSupported\": false,\n        \"aspspNotificationsSupported\": [\n        \t\"NONE\"\t\n        ],\n          \t\"authorisationConfirmationRequestMandated\": false,\n    \t\"authorisationConfirmationCheckByXs2a\": false, \n  \"checkUriComplianceToDomainSupported\": false,\n   \"tppUriComplianceResponse\": \"REJECT\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/aspsp-settings",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"aspsp-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Payment initiation request invalid uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "216bf5f8-d4f7-4aa1-b502-5270cd5aa3eb",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "300ba67c-44a5-4c93-b3f1-dac66ed27754",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_single}}",
								"type": "text"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}",
								"type": "text"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"value": "true",
								"type": "text"
							},
							{
								"key": "TPP-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "{{certificate-with-link}}",
								"type": "text"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Payment initiation request uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a1e6697-1309-4435-84d5-2c046c2c7aab",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "69a13fcb-e56f-4d25-b832-d927b4d134d4",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_single}}"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "TPP-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "tpp-qwac-certificate",
								"type": "text",
								"value": "{{certificate-with-link}}"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.finapi.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}