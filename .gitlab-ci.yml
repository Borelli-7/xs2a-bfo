---
# yamllint disable rule:line-length
# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

image: "adorsys/ci-build:latest"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Lint"    # Lint files and configuration
  - "Compile" # build jar and provide as artifact
  - "Test"    # run tests and code quality checks
  - "Package" # dockerize jar and push to docker registry
  - "Release" # release
  - "Clone to github"

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables:
  DOCKER_IMAGE_NAME_CMS_MANAGEMENT: "xs2a-consent-management"
  DOCKER_IMAGE_NAME_ASPSP_PROFILE: "xs2a-aspsp-profile"
  DOCKER_IMAGE_NAME_CERTIFICATE_GENERATOR: "xs2a-certificate-generator"

  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.build_java: &build_java
  script:
    - jabba use ${JAVA_VERSION}
    - env BUILD_NUMBER=$CI_PIPELINE_IID ./scripts/set_xs2a_connector_version_in_swagger.sh
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp -DskipITs -DskipTests -Dci.build.number=Build\:${CI_PIPELINE_ID} clean install

.java_tests: &java_tests
  script:
    - jabba use $JAVA_VERSION
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp -DskipITs --fail-at-end clean install -q

.push_dockerhub_images_private: &push_dockerhub_images_private
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CMS_MANAGEMENT}:${DOCKER_TAG}" consent-management/cms-standalone-service
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}" aspsp-profile/aspsp-profile-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CERTIFICATE_GENERATOR}:${DOCKER_TAG}" certificate-generator
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CMS_MANAGEMENT}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CERTIFICATE_GENERATOR}:${DOCKER_TAG}"
    - docker logout

.release_java_private: &release_java_private
  stage: "Release"
  script:
    - jabba use $BUILD_JAVA_VERSION
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp --settings scripts/mvn-release-settings.xml -Pgitlab-maven -DskipTests -U deploy
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/xs2a-conector-examples/.m2/repository

.sync_changes_github: &sync_changes_github
  image: alpine/git
  script:
    - git config --global user.name "$GITHUB_USERNAME"
    - git remote add github https://$GITHUB_TOKEN_EVGENIY@github.com/$GITHUB_REPOSITORY.git
    - for branch in $(git branch -r | grep -E "origin/.*(release-${GITHUB_PROJECT_CLONE_VERSION}.*|support-${GITHUB_PROJECT_CLONE_VERSION}.x).*"); do
      branch=${branch#origin/};
      git checkout $branch;
      git push github $branch;
      done

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

#-------------------------------------------------------------------
# lint
#-------------------------------------------------------------------

Lint (Docker compose):
  image: maven:3.6-jdk-11-slim
  stage: "Lint"
  except:
    - schedules
    - support-14.x
    - master-14.x
  script:
    - apt update && apt install yamllint docker-compose make -yq
    - echo "Run Docker compose lint"
    - docker-compose -f docker-compose.yml config  -q

Lint (Ci file):
  image: debian:stable-slim
  stage: "Lint"
  except:
    - schedules
    - support-14.x
    - master-14.x
  script:
    - apt-get update && apt-get install yamllint python3-pkg-resources -yq
    - echo "Run Gitlab ci file lint"
    - yamllint -d relaxed .gitlab-ci.yml

Lint (YAML, JSON, XML):
  image: debian:stable-slim
  stage: "Lint"
  except:
    - schedules
    - support-14.x
    - master-14.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run Xs2A core lint"
    - find ./ -type f -name "*.json" -exec jsonlint -q {} \; # lint all json
  # commented cause get many small errors for yaml with spaces empty lines and etc
  #   - find ./ -type f \( -name "*.yml" -o -name "*.yaml" \) -exec yamllint -d "{extends: relaxed, rules: {line-length: {max: 160}}}" {} \;
  # commented cause get error Unsupported version '1.1'
  #     - find ./ -type f \( -iname "*.xml" ! -iname pom.xml \) -exec xmllint --noout {} \;

Lint (PMD CPD):
  image: maven:3.6-jdk-11-slim
  stage: "Lint"
  except:
    - schedules
    - support-14.x
    - master-14.x
  script:
    - apt update && apt install make -yq
    - echo "Test java code for PMD and CPD"
    - echo "DOCKER_HOST=$DOCKER_HOST"
    - mvn -ntp -Dmaven.test.skip=true package pmd:check # commented cause many duplications pmd:cpd-check
  cache: {}
  artifacts:
    paths:
      - "qa/pmd/pmd-ruleset.xml"
      - "**/**/*/pmd.html"
      - "**/*/pmd.xml"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

Lint (dockerfiles):
  image: docker
  stage: "Lint"
  services:
    - docker:dind
  tags:
    - aws
  except:
    - schedules
    - support-14.x
    - master-14.x
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - echo "Run Xs2a core dockerfile check"
    - docker run --rm -i hadolint/hadolint < ./consent-management/cms-standalone-service/Dockerfile
    - docker run --rm -i hadolint/hadolint < ./aspsp-profile/aspsp-profile-server/Dockerfile
    - docker run --rm -i hadolint/hadolint < ./xs2a-standalone-starter/Dockerfile
    - docker run --rm -i hadolint/hadolint < ./certificate-generator/Dockerfile

#-------------------------------------------------------------------
# Compile
#-------------------------------------------------------------------

Build XS2A:
  stage: "Compile"
  except:
    - schedules
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *build_java
  artifacts:
    paths:
      - "xs2a-standalone-starter/target/xs2a-standalone-starter-exec.jar"
      - "consent-management/cms-standalone-service/target/consent-management*jar"
      - "aspsp-profile/aspsp-profile-server/target/aspsp-profile*jar"
      - "certificate-generator/target/certificate-generator.jar"
      - "**/target/*"
      - "**/**/target/*"
      - ".m2/repository/de/adorsys/psd2/*/*"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

#-------------------
# Test
#-------------------

Test (IT):
  stage: "Test"
  image: maven:3.6.3-jdk-11
  services:
    - docker:dind
  tags:
    - aws
  except:
    - schedules
  script:
    #    - jabba use ${JAVA_VERSION}
    - echo "DOCKER_HOST=${DOCKER_HOST}"
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp failsafe:integration-test failsafe:verify
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    TESTCONTAINERS_RYUK_DISABLED: "true"

Test (Javadoc):
  stage: "Test"
  except:
    - schedules
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    JAVA_VERSION: "system@1.11"
  script:
    - jabba use ${JAVA_VERSION}
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc

Test (Unit Tests):
  stage: "Test"
  except:
    - schedules
  <<: *java_tests
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

Test (ASCII Doc):
  stage: "Test"
  except:
    - schedules
  image: adorsys/arc42-tools
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  script:
    - make pages

Build and push images to private repo (support-14.x):
  stage: "Package"
  services:
    - docker:dind
  tags:
    - aws
  except:
    - schedules
  only:
    - support-14.x
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_TAG: support14x
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/aspsp-xs2a"
  <<: *push_dockerhub_images_private

Build and push images to private repo (Tags):
  stage: "Package"
  services:
    - docker:dind
  tags:
    - aws
  only:
    - tags
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_TAG: $CI_COMMIT_TAG
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/aspsp-xs2a"
  <<: *push_dockerhub_images_private

Release snapshot artifacts (support-14.x):
  stage: "Release"
  only:
    - support-14.x
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *release_java_private

Release snapshot artifacts (tags):
  stage: "Release"
  only:
    - tags
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *release_java_private

Clone to github:
  stage: "Clone to github"
  <<: *sync_changes_github
  image: alpine/git:latest
  needs: []
  only:
    # - /^.*release-${GITHUB_PROJECT_CLONE_VERSION}.*$/
    # - support-${GITHUB_PROJECT_CLONE_VERSION}.x
    - support-14.x
    - /^.*release-14.*$/
  except:
    - schedules
  variables:
    GITHUB_USERNAME: evgeniy-shapoval
    GITHUB_REPOSITORY: adorsys/xs2a
    GITHUB_PROJECT_CLONE_VERSION: "14"
